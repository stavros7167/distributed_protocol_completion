
// A surprising solution for ABP Receiver, as described in the SIGACT paper

process receiver {
  inputs [p0', p1']
  outputs [deliver, a0, a1]
  initial r0

  // r0 is an "input state": it can receive both inputs p0' and p1'
  r0 p0'? r1
  r0 p1'? r5

  // r1 is an "output state"
  r1 deliver! r2 strong_fairness

  // r2 is an "output state"
  r2 a0! r3 // strong_fairness // redundant, but could be added to conform
				// to the default requirement that all outputs
				// of protocol processes are strongly fair

  // r3 is an "input state": it can receive both inputs p0' and p1'
  r3 p1'? r4
  r3 p0'? r2

  // r4 is an "output state"
  r4 deliver! r0 strong_fairness

  // r5 is an "output state"
  r5 a1! r0 // strong_fairness // redundant, but could be added as above
}


