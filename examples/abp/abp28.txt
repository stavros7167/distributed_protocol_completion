
// new manually designed correct protocol, where we require
// (1) input-enabled protocol processes
// (2) all protocol processes have fairness on outputs
// (3) all environment processes are input-enabled including output states

// ENVIRONMENT PROCESSES

include "channels.txt"

forward_channel = channel(p0, p1, p0', p1')

backward_channel = channel(a0, a1, a0', a1')

include "client_sending_input_enabled.txt"

include "client_receiving_without_fairness.txt"

include "timer.txt"


// PROTOCOL PROCESSES

// include "manual_sender4.txt"
// or you can also used the synthesized sender from abp27.txt :
include "completed_sender27.txt"
// or you can also used another synthesized sender from abp27.txt :
// include "sender_surprise.txt"

// you can also choose between these receivers:
include "manual_receiver_with_fairness.txt"
// include "receiver_surprise.txt"


// PROPERTIES

include "safety_monitor.txt"

include "safety_monitor2.txt"

include "liveness1.txt" // [](send -> <> deliver)

include "liveness3.txt" // [](send -> <> done)

// in order to satisfy the property below, you have to enable strong fairness
// on the Sending Client: client_sending_input_enabled.txt
include "infinitely_often_send_input_complete.txt"

strong_non_blocking [send, deliver, done, timeout, p0, p1, a0, a1, p0', p1', a0', a1']

