
// This is a "manually" designed sender for the "new" abp15.txt protocol.
// This sender is a copy of manual_sender3.txt, made input-enabled.

process sender {
  inputs [send, a0', a1', timeout]
  outputs [done, p0, p1]
  initial s0

  // s0 is an "input state": it can receive all 4 inputs of the sender
  s0 send? s1
  s0 a0'? s0 // adding or removing this self-loop does not seem to affect
		// correctness of abp15.txt
  s0 a1'? s0
  s0 timeout? s0

  // s1 is an "output state": it does not need to receive any inputs
  s1 p0! s2 // strong_fairness // redundant, but could be added in order
				// to conform to the default requirement
				// that all outputs of protocol processes
				// are strongly fair

  // s2 is an "input state": it is also input-enabled
  s2 a0'? s3
  s2 a1'? s2
  s2 timeout? s1
  s2 send? s2

  // s3 is an "output state":
  s3 done! s4 // strong_fairness // redundant, as above

  // s4 is an "input state": it is also input-enabled
  s4 send? s5
  s4 a0'? s4
  s4 a1'? s4 
  s4 timeout? s4

  // s5 is an "output state"
  s5 p1! s6 // strong_fairness // redundant, as above

  // s6 is an "input state": it is also input-enabled
  s6 a1'? s7
  s6 a0'? s6
  s6 timeout? s5
  s6 send? s6

  // s7 is an "output state":
  s7 done! s0 // strong_fairness // redundant, as above
}

