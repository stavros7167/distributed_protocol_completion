
// This is the solution synthesized from abp19.txt 
// The difference with completed_sender7.txt is in "incomplete 7, completed 1"

process sender {
  inputs [send, a0', a1', timeout]
  outputs [done, p0, p1]
  initial s0

  // s0 is an "input state": it can receive all 4 inputs of the sender
  s0 send? s1
  // s0 a0'? s0 // adding or removing this self-loop does not seem to affect
		// correctness of abp15.txt
  s0 a1'? s0		// incomplete 1, completed 7
  s0 timeout? s0	// incomplete 2, completed 8


  // s1 is an "output state": it does not need to receive any inputs
  s1 p0! s2


  // s2 is an "input state": it can receive a0', a1', and timeout
  // although it cannot receive "send", this is fine, since "send" is not
  // in the list of messages for which strong non-blockingness is required
  s2 a0'? s3
  // s2 a1'? s2		// incomplete 3
  s2 a1'? s1		// completed 4
  s2 timeout? s1 	// incomplete 4, completed 3


  // s3 is an "output state":
  s3 done! s4


  // s4 is an "input state": it can receive all 4 inputs of the sender
  s4 send? s5
  s4 a0'? s4		// incomplete 5, completed 6
  // s4 a1'? s4 // adding or removing this self-loop does not seem to affect
		// correctness of abp15.txt
  s4 timeout? s4	// incomplete 6, completed 5


  // s5 is an "output state"
  s5 p1! s6


  // s6 is an "input state"
  s6 a1'? s7
  s6 a0'? s6		// incomplete 7, completed 1
  s6 timeout? s5	// incomplete 8, completed 2 


  // s7 is an "output state":
  s7 done! s0
}

