Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> automata
Rule 1     automata -> include automata
Rule 2     automata -> function automata
Rule 3     automata -> definition automata
Rule 4     automata -> instantiation automata
Rule 5     automata -> strong_non_blocking automata
Rule 6     automata -> include
Rule 7     automata -> function
Rule 8     automata -> definition
Rule 9     automata -> instantiation
Rule 10    automata -> strong_non_blocking
Rule 11    automata -> error
Rule 12    include -> INCLUDE FILE
Rule 13    strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET
Rule 14    definition -> PROCESS NAME inner
Rule 15    definition -> ENVIRONMENT NAME inner
Rule 16    definition -> LIVENESS NAME inner
Rule 17    definition -> SAFETY NAME inner
Rule 18    inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
Rule 19    inputs -> INPUTS LEFT_BRACKET names RIGHT_BRACKET
Rule 20    optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKET
Rule 21    optional_input_enabled -> <empty>
Rule 22    outputs -> OUTPUTS LEFT_BRACKET names RIGHT_BRACKET
Rule 23    optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET
Rule 24    optional_states -> <empty>
Rule 25    optional_input_states -> INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET
Rule 26    optional_input_states -> <empty>
Rule 27    optional_output_states -> OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKET
Rule 28    optional_output_states -> <empty>
Rule 29    optional_accepting -> ACCEPTING LEFT_BRACKET names RIGHT_BRACKET
Rule 30    optional_accepting -> <empty>
Rule 31    instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
Rule 32    function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
Rule 33    function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
Rule 34    function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
Rule 35    function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
Rule 36    names -> NAME COMMA names
Rule 37    names -> NAME
Rule 38    names -> <empty>
Rule 39    initial -> NAME NAME
Rule 40    edges -> edge edges
Rule 41    edges -> <empty>
Rule 42    edge -> NAME NAME SEND NAME
Rule 43    edge -> NAME NAME RECEIVE NAME
Rule 44    edge -> NAME NAME SEND NAME STRONG_FAIRNESS
Rule 45    edge -> NAME NAME RECEIVE NAME STRONG_FAIRNESS

Terminals, with rules where they appear

ACCEPTING            : 29
COMMA                : 36
ENVIRONMENT          : 15 33
EQUALS               : 31
FILE                 : 12
INCLUDE              : 12
INPUTS               : 19
INPUT_ENABLED        : 20
INPUT_STATES         : 25
LEFT_BRACE           : 18
LEFT_BRACKET         : 13 19 20 22 23 25 27 29
LEFT_PAREN           : 31 32 33 34 35
LIVENESS             : 16 34
NAME                 : 14 15 16 17 31 31 32 33 34 35 36 37 39 39 42 42 42 43 43 43 44 44 44 45 45 45
OUTPUTS              : 22
OUTPUT_STATES        : 27
PROCESS              : 14 32
RECEIVE              : 43 45
RIGHT_BRACE          : 18
RIGHT_BRACKET        : 13 19 20 22 23 25 27 29
RIGHT_PAREN          : 31 32 33 34 35
SAFETY               : 17 35
SEND                 : 42 44
STATES               : 23
STRONG_FAIRNESS      : 44 45
STRONG_NON_BLOCKING  : 13
error                : 11

Nonterminals, with rules where they appear

automata             : 1 2 3 4 5 0
definition           : 3 8
edge                 : 40
edges                : 18 40
function             : 2 7
include              : 1 6
initial              : 18
inner                : 14 15 16 17 32 33 34 35
inputs               : 18
instantiation        : 4 9
names                : 13 19 20 22 23 25 27 29 31 32 33 34 35 36
optional_accepting   : 18
optional_input_enabled : 18
optional_input_states : 18
optional_output_states : 18
optional_states      : 18
outputs              : 18
strong_non_blocking  : 5 10

Parsing method: LALR

state 0

    (0) S' -> . automata
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 4
    include                        shift and go to state 5

state 1

    (33) function -> ENVIRONMENT . NAME LEFT_PAREN names RIGHT_PAREN inner
    (15) definition -> ENVIRONMENT . NAME inner

    NAME            shift and go to state 15


state 2

    (4) automata -> instantiation . automata
    (9) automata -> instantiation .
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    $end            reduce using rule 9 (automata -> instantiation .)
    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 16
    include                        shift and go to state 5

state 3

    (5) automata -> strong_non_blocking . automata
    (10) automata -> strong_non_blocking .
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    $end            reduce using rule 10 (automata -> strong_non_blocking .)
    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 17
    include                        shift and go to state 5

state 4

    (0) S' -> automata .



state 5

    (1) automata -> include . automata
    (6) automata -> include .
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    $end            reduce using rule 6 (automata -> include .)
    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 18
    include                        shift and go to state 5

state 6

    (2) automata -> function . automata
    (7) automata -> function .
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    $end            reduce using rule 7 (automata -> function .)
    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 19
    include                        shift and go to state 5

state 7

    (13) strong_non_blocking -> STRONG_NON_BLOCKING . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 20


state 8

    (12) include -> INCLUDE . FILE

    FILE            shift and go to state 21


state 9

    (3) automata -> definition . automata
    (8) automata -> definition .
    (1) automata -> . include automata
    (2) automata -> . function automata
    (3) automata -> . definition automata
    (4) automata -> . instantiation automata
    (5) automata -> . strong_non_blocking automata
    (6) automata -> . include
    (7) automata -> . function
    (8) automata -> . definition
    (9) automata -> . instantiation
    (10) automata -> . strong_non_blocking
    (11) automata -> . error
    (12) include -> . INCLUDE FILE
    (32) function -> . PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (33) function -> . ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner
    (34) function -> . LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner
    (35) function -> . SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> . PROCESS NAME inner
    (15) definition -> . ENVIRONMENT NAME inner
    (16) definition -> . LIVENESS NAME inner
    (17) definition -> . SAFETY NAME inner
    (31) instantiation -> . NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN
    (13) strong_non_blocking -> . STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET

    $end            reduce using rule 8 (automata -> definition .)
    error           shift and go to state 14
    INCLUDE         shift and go to state 8
    PROCESS         shift and go to state 11
    ENVIRONMENT     shift and go to state 1
    LIVENESS        shift and go to state 12
    SAFETY          shift and go to state 13
    NAME            shift and go to state 10
    STRONG_NON_BLOCKING shift and go to state 7

    function                       shift and go to state 6
    definition                     shift and go to state 9
    instantiation                  shift and go to state 2
    strong_non_blocking            shift and go to state 3
    automata                       shift and go to state 22
    include                        shift and go to state 5

state 10

    (31) instantiation -> NAME . EQUALS NAME LEFT_PAREN names RIGHT_PAREN

    EQUALS          shift and go to state 23


state 11

    (32) function -> PROCESS . NAME LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> PROCESS . NAME inner

    NAME            shift and go to state 24


state 12

    (34) function -> LIVENESS . NAME LEFT_PAREN names RIGHT_PAREN inner
    (16) definition -> LIVENESS . NAME inner

    NAME            shift and go to state 25


state 13

    (35) function -> SAFETY . NAME LEFT_PAREN names RIGHT_PAREN inner
    (17) definition -> SAFETY . NAME inner

    NAME            shift and go to state 26


state 14

    (11) automata -> error .

    $end            reduce using rule 11 (automata -> error .)


state 15

    (33) function -> ENVIRONMENT NAME . LEFT_PAREN names RIGHT_PAREN inner
    (15) definition -> ENVIRONMENT NAME . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_PAREN      shift and go to state 28
    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 29

state 16

    (4) automata -> instantiation automata .

    $end            reduce using rule 4 (automata -> instantiation automata .)


state 17

    (5) automata -> strong_non_blocking automata .

    $end            reduce using rule 5 (automata -> strong_non_blocking automata .)


state 18

    (1) automata -> include automata .

    $end            reduce using rule 1 (automata -> include automata .)


state 19

    (2) automata -> function automata .

    $end            reduce using rule 2 (automata -> function automata .)


state 20

    (13) strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 31

state 21

    (12) include -> INCLUDE FILE .

    error           reduce using rule 12 (include -> INCLUDE FILE .)
    INCLUDE         reduce using rule 12 (include -> INCLUDE FILE .)
    PROCESS         reduce using rule 12 (include -> INCLUDE FILE .)
    ENVIRONMENT     reduce using rule 12 (include -> INCLUDE FILE .)
    LIVENESS        reduce using rule 12 (include -> INCLUDE FILE .)
    SAFETY          reduce using rule 12 (include -> INCLUDE FILE .)
    NAME            reduce using rule 12 (include -> INCLUDE FILE .)
    STRONG_NON_BLOCKING reduce using rule 12 (include -> INCLUDE FILE .)
    $end            reduce using rule 12 (include -> INCLUDE FILE .)


state 22

    (3) automata -> definition automata .

    $end            reduce using rule 3 (automata -> definition automata .)


state 23

    (31) instantiation -> NAME EQUALS . NAME LEFT_PAREN names RIGHT_PAREN

    NAME            shift and go to state 32


state 24

    (32) function -> PROCESS NAME . LEFT_PAREN names RIGHT_PAREN inner
    (14) definition -> PROCESS NAME . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_PAREN      shift and go to state 33
    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 34

state 25

    (34) function -> LIVENESS NAME . LEFT_PAREN names RIGHT_PAREN inner
    (16) definition -> LIVENESS NAME . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_PAREN      shift and go to state 35
    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 36

state 26

    (35) function -> SAFETY NAME . LEFT_PAREN names RIGHT_PAREN inner
    (17) definition -> SAFETY NAME . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_PAREN      shift and go to state 37
    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 38

state 27

    (18) inner -> LEFT_BRACE . optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
    (23) optional_states -> . STATES LEFT_BRACKET names RIGHT_BRACKET
    (24) optional_states -> .

    STATES          shift and go to state 39
    INPUT_STATES    reduce using rule 24 (optional_states -> .)
    OUTPUT_STATES   reduce using rule 24 (optional_states -> .)
    INPUTS          reduce using rule 24 (optional_states -> .)

    optional_states                shift and go to state 40

state 28

    (33) function -> ENVIRONMENT NAME LEFT_PAREN . names RIGHT_PAREN inner
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 41

state 29

    (15) definition -> ENVIRONMENT NAME inner .

    error           reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    INCLUDE         reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    PROCESS         reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    ENVIRONMENT     reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    LIVENESS        reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    SAFETY          reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    NAME            reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    STRONG_NON_BLOCKING reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)
    $end            reduce using rule 15 (definition -> ENVIRONMENT NAME inner .)


state 30

    (36) names -> NAME . COMMA names
    (37) names -> NAME .

    COMMA           shift and go to state 42
    RIGHT_PAREN     reduce using rule 37 (names -> NAME .)
    RIGHT_BRACKET   reduce using rule 37 (names -> NAME .)


state 31

    (13) strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 43


state 32

    (31) instantiation -> NAME EQUALS NAME . LEFT_PAREN names RIGHT_PAREN

    LEFT_PAREN      shift and go to state 44


state 33

    (32) function -> PROCESS NAME LEFT_PAREN . names RIGHT_PAREN inner
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 45

state 34

    (14) definition -> PROCESS NAME inner .

    error           reduce using rule 14 (definition -> PROCESS NAME inner .)
    INCLUDE         reduce using rule 14 (definition -> PROCESS NAME inner .)
    PROCESS         reduce using rule 14 (definition -> PROCESS NAME inner .)
    ENVIRONMENT     reduce using rule 14 (definition -> PROCESS NAME inner .)
    LIVENESS        reduce using rule 14 (definition -> PROCESS NAME inner .)
    SAFETY          reduce using rule 14 (definition -> PROCESS NAME inner .)
    NAME            reduce using rule 14 (definition -> PROCESS NAME inner .)
    STRONG_NON_BLOCKING reduce using rule 14 (definition -> PROCESS NAME inner .)
    $end            reduce using rule 14 (definition -> PROCESS NAME inner .)


state 35

    (34) function -> LIVENESS NAME LEFT_PAREN . names RIGHT_PAREN inner
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 46

state 36

    (16) definition -> LIVENESS NAME inner .

    error           reduce using rule 16 (definition -> LIVENESS NAME inner .)
    INCLUDE         reduce using rule 16 (definition -> LIVENESS NAME inner .)
    PROCESS         reduce using rule 16 (definition -> LIVENESS NAME inner .)
    ENVIRONMENT     reduce using rule 16 (definition -> LIVENESS NAME inner .)
    LIVENESS        reduce using rule 16 (definition -> LIVENESS NAME inner .)
    SAFETY          reduce using rule 16 (definition -> LIVENESS NAME inner .)
    NAME            reduce using rule 16 (definition -> LIVENESS NAME inner .)
    STRONG_NON_BLOCKING reduce using rule 16 (definition -> LIVENESS NAME inner .)
    $end            reduce using rule 16 (definition -> LIVENESS NAME inner .)


state 37

    (35) function -> SAFETY NAME LEFT_PAREN . names RIGHT_PAREN inner
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 47

state 38

    (17) definition -> SAFETY NAME inner .

    error           reduce using rule 17 (definition -> SAFETY NAME inner .)
    INCLUDE         reduce using rule 17 (definition -> SAFETY NAME inner .)
    PROCESS         reduce using rule 17 (definition -> SAFETY NAME inner .)
    ENVIRONMENT     reduce using rule 17 (definition -> SAFETY NAME inner .)
    LIVENESS        reduce using rule 17 (definition -> SAFETY NAME inner .)
    SAFETY          reduce using rule 17 (definition -> SAFETY NAME inner .)
    NAME            reduce using rule 17 (definition -> SAFETY NAME inner .)
    STRONG_NON_BLOCKING reduce using rule 17 (definition -> SAFETY NAME inner .)
    $end            reduce using rule 17 (definition -> SAFETY NAME inner .)


state 39

    (23) optional_states -> STATES . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 48


state 40

    (18) inner -> LEFT_BRACE optional_states . optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
    (25) optional_input_states -> . INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET
    (26) optional_input_states -> .

    INPUT_STATES    shift and go to state 49
    OUTPUT_STATES   reduce using rule 26 (optional_input_states -> .)
    INPUTS          reduce using rule 26 (optional_input_states -> .)

    optional_input_states          shift and go to state 50

state 41

    (33) function -> ENVIRONMENT NAME LEFT_PAREN names . RIGHT_PAREN inner

    RIGHT_PAREN     shift and go to state 51


state 42

    (36) names -> NAME COMMA . names
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 52

state 43

    (13) strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .

    error           reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    INCLUDE         reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    PROCESS         reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    ENVIRONMENT     reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    LIVENESS        reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    SAFETY          reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    NAME            reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    STRONG_NON_BLOCKING reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)
    $end            reduce using rule 13 (strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET .)


state 44

    (31) instantiation -> NAME EQUALS NAME LEFT_PAREN . names RIGHT_PAREN
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_PAREN     reduce using rule 38 (names -> .)

    names                          shift and go to state 53

state 45

    (32) function -> PROCESS NAME LEFT_PAREN names . RIGHT_PAREN inner

    RIGHT_PAREN     shift and go to state 54


state 46

    (34) function -> LIVENESS NAME LEFT_PAREN names . RIGHT_PAREN inner

    RIGHT_PAREN     shift and go to state 55


state 47

    (35) function -> SAFETY NAME LEFT_PAREN names . RIGHT_PAREN inner

    RIGHT_PAREN     shift and go to state 56


state 48

    (23) optional_states -> STATES LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 57

state 49

    (25) optional_input_states -> INPUT_STATES . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 58


state 50

    (18) inner -> LEFT_BRACE optional_states optional_input_states . optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
    (27) optional_output_states -> . OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKET
    (28) optional_output_states -> .

    OUTPUT_STATES   shift and go to state 60
    INPUTS          reduce using rule 28 (optional_output_states -> .)

    optional_output_states         shift and go to state 59

state 51

    (33) function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 61

state 52

    (36) names -> NAME COMMA names .

    RIGHT_PAREN     reduce using rule 36 (names -> NAME COMMA names .)
    RIGHT_BRACKET   reduce using rule 36 (names -> NAME COMMA names .)


state 53

    (31) instantiation -> NAME EQUALS NAME LEFT_PAREN names . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 62


state 54

    (32) function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 63

state 55

    (34) function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 64

state 56

    (35) function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN . inner
    (18) inner -> . LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    inner                          shift and go to state 65

state 57

    (23) optional_states -> STATES LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 66


state 58

    (25) optional_input_states -> INPUT_STATES LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 67

state 59

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states . inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
    (19) inputs -> . INPUTS LEFT_BRACKET names RIGHT_BRACKET

    INPUTS          shift and go to state 69

    inputs                         shift and go to state 68

state 60

    (27) optional_output_states -> OUTPUT_STATES . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 70


state 61

    (33) function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .

    error           reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    INCLUDE         reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    PROCESS         reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    ENVIRONMENT     reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    LIVENESS        reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    SAFETY          reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    NAME            reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    STRONG_NON_BLOCKING reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)
    $end            reduce using rule 33 (function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner .)


state 62

    (31) instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .

    error           reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    INCLUDE         reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    PROCESS         reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    ENVIRONMENT     reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    LIVENESS        reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    SAFETY          reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    NAME            reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    STRONG_NON_BLOCKING reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)
    $end            reduce using rule 31 (instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN .)


state 63

    (32) function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .

    error           reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    INCLUDE         reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    PROCESS         reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    ENVIRONMENT     reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    LIVENESS        reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    SAFETY          reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    NAME            reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    STRONG_NON_BLOCKING reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    $end            reduce using rule 32 (function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner .)


state 64

    (34) function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .

    error           reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    INCLUDE         reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    PROCESS         reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    ENVIRONMENT     reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    LIVENESS        reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    SAFETY          reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    NAME            reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    STRONG_NON_BLOCKING reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)
    $end            reduce using rule 34 (function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner .)


state 65

    (35) function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .

    error           reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    INCLUDE         reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    PROCESS         reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    ENVIRONMENT     reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    LIVENESS        reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    SAFETY          reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    NAME            reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    STRONG_NON_BLOCKING reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)
    $end            reduce using rule 35 (function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner .)


state 66

    (23) optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET .

    INPUT_STATES    reduce using rule 23 (optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET .)
    OUTPUT_STATES   reduce using rule 23 (optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET .)
    INPUTS          reduce using rule 23 (optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET .)


state 67

    (25) optional_input_states -> INPUT_STATES LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 71


state 68

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs . optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE
    (20) optional_input_enabled -> . INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKET
    (21) optional_input_enabled -> .

    INPUT_ENABLED   shift and go to state 73
    OUTPUTS         reduce using rule 21 (optional_input_enabled -> .)

    optional_input_enabled         shift and go to state 72

state 69

    (19) inputs -> INPUTS . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 74


state 70

    (27) optional_output_states -> OUTPUT_STATES LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 75

state 71

    (25) optional_input_states -> INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET .

    OUTPUT_STATES   reduce using rule 25 (optional_input_states -> INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET .)
    INPUTS          reduce using rule 25 (optional_input_states -> INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET .)


state 72

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled . outputs initial optional_accepting edges RIGHT_BRACE
    (22) outputs -> . OUTPUTS LEFT_BRACKET names RIGHT_BRACKET

    OUTPUTS         shift and go to state 77

    outputs                        shift and go to state 76

state 73

    (20) optional_input_enabled -> INPUT_ENABLED . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 78


state 74

    (19) inputs -> INPUTS LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 79

state 75

    (27) optional_output_states -> OUTPUT_STATES LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 80


state 76

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs . initial optional_accepting edges RIGHT_BRACE
    (39) initial -> . NAME NAME

    NAME            shift and go to state 82

    initial                        shift and go to state 81

state 77

    (22) outputs -> OUTPUTS . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 83


state 78

    (20) optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 84

state 79

    (19) inputs -> INPUTS LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 85


state 80

    (27) optional_output_states -> OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKET .

    INPUTS          reduce using rule 27 (optional_output_states -> OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKET .)


state 81

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial . optional_accepting edges RIGHT_BRACE
    (29) optional_accepting -> . ACCEPTING LEFT_BRACKET names RIGHT_BRACKET
    (30) optional_accepting -> .

    ACCEPTING       shift and go to state 87
    NAME            reduce using rule 30 (optional_accepting -> .)
    RIGHT_BRACE     reduce using rule 30 (optional_accepting -> .)

    optional_accepting             shift and go to state 86

state 82

    (39) initial -> NAME . NAME

    NAME            shift and go to state 88


state 83

    (22) outputs -> OUTPUTS LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 89

state 84

    (20) optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 90


state 85

    (19) inputs -> INPUTS LEFT_BRACKET names RIGHT_BRACKET .

    INPUT_ENABLED   reduce using rule 19 (inputs -> INPUTS LEFT_BRACKET names RIGHT_BRACKET .)
    OUTPUTS         reduce using rule 19 (inputs -> INPUTS LEFT_BRACKET names RIGHT_BRACKET .)


state 86

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting . edges RIGHT_BRACE
    (40) edges -> . edge edges
    (41) edges -> .
    (42) edge -> . NAME NAME SEND NAME
    (43) edge -> . NAME NAME RECEIVE NAME
    (44) edge -> . NAME NAME SEND NAME STRONG_FAIRNESS
    (45) edge -> . NAME NAME RECEIVE NAME STRONG_FAIRNESS

    RIGHT_BRACE     reduce using rule 41 (edges -> .)
    NAME            shift and go to state 91

    edges                          shift and go to state 92
    edge                           shift and go to state 93

state 87

    (29) optional_accepting -> ACCEPTING . LEFT_BRACKET names RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 94


state 88

    (39) initial -> NAME NAME .

    ACCEPTING       reduce using rule 39 (initial -> NAME NAME .)
    NAME            reduce using rule 39 (initial -> NAME NAME .)
    RIGHT_BRACE     reduce using rule 39 (initial -> NAME NAME .)


state 89

    (22) outputs -> OUTPUTS LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 95


state 90

    (20) optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKET .

    OUTPUTS         reduce using rule 20 (optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKET .)


state 91

    (42) edge -> NAME . NAME SEND NAME
    (43) edge -> NAME . NAME RECEIVE NAME
    (44) edge -> NAME . NAME SEND NAME STRONG_FAIRNESS
    (45) edge -> NAME . NAME RECEIVE NAME STRONG_FAIRNESS

    NAME            shift and go to state 96


state 92

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 97


state 93

    (40) edges -> edge . edges
    (40) edges -> . edge edges
    (41) edges -> .
    (42) edge -> . NAME NAME SEND NAME
    (43) edge -> . NAME NAME RECEIVE NAME
    (44) edge -> . NAME NAME SEND NAME STRONG_FAIRNESS
    (45) edge -> . NAME NAME RECEIVE NAME STRONG_FAIRNESS

    RIGHT_BRACE     reduce using rule 41 (edges -> .)
    NAME            shift and go to state 91

    edge                           shift and go to state 93
    edges                          shift and go to state 98

state 94

    (29) optional_accepting -> ACCEPTING LEFT_BRACKET . names RIGHT_BRACKET
    (36) names -> . NAME COMMA names
    (37) names -> . NAME
    (38) names -> .

    NAME            shift and go to state 30
    RIGHT_BRACKET   reduce using rule 38 (names -> .)

    names                          shift and go to state 99

state 95

    (22) outputs -> OUTPUTS LEFT_BRACKET names RIGHT_BRACKET .

    NAME            reduce using rule 22 (outputs -> OUTPUTS LEFT_BRACKET names RIGHT_BRACKET .)


state 96

    (42) edge -> NAME NAME . SEND NAME
    (43) edge -> NAME NAME . RECEIVE NAME
    (44) edge -> NAME NAME . SEND NAME STRONG_FAIRNESS
    (45) edge -> NAME NAME . RECEIVE NAME STRONG_FAIRNESS

    SEND            shift and go to state 101
    RECEIVE         shift and go to state 100


state 97

    (18) inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .

    error           reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    INCLUDE         reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    PROCESS         reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    ENVIRONMENT     reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    LIVENESS        reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    SAFETY          reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    NAME            reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    STRONG_NON_BLOCKING reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)
    $end            reduce using rule 18 (inner -> LEFT_BRACE optional_states optional_input_states optional_output_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE .)


state 98

    (40) edges -> edge edges .

    RIGHT_BRACE     reduce using rule 40 (edges -> edge edges .)


state 99

    (29) optional_accepting -> ACCEPTING LEFT_BRACKET names . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 102


state 100

    (43) edge -> NAME NAME RECEIVE . NAME
    (45) edge -> NAME NAME RECEIVE . NAME STRONG_FAIRNESS

    NAME            shift and go to state 103


state 101

    (42) edge -> NAME NAME SEND . NAME
    (44) edge -> NAME NAME SEND . NAME STRONG_FAIRNESS

    NAME            shift and go to state 104


state 102

    (29) optional_accepting -> ACCEPTING LEFT_BRACKET names RIGHT_BRACKET .

    NAME            reduce using rule 29 (optional_accepting -> ACCEPTING LEFT_BRACKET names RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 29 (optional_accepting -> ACCEPTING LEFT_BRACKET names RIGHT_BRACKET .)


state 103

    (43) edge -> NAME NAME RECEIVE NAME .
    (45) edge -> NAME NAME RECEIVE NAME . STRONG_FAIRNESS

    NAME            reduce using rule 43 (edge -> NAME NAME RECEIVE NAME .)
    RIGHT_BRACE     reduce using rule 43 (edge -> NAME NAME RECEIVE NAME .)
    STRONG_FAIRNESS shift and go to state 105


state 104

    (42) edge -> NAME NAME SEND NAME .
    (44) edge -> NAME NAME SEND NAME . STRONG_FAIRNESS

    NAME            reduce using rule 42 (edge -> NAME NAME SEND NAME .)
    RIGHT_BRACE     reduce using rule 42 (edge -> NAME NAME SEND NAME .)
    STRONG_FAIRNESS shift and go to state 106


state 105

    (45) edge -> NAME NAME RECEIVE NAME STRONG_FAIRNESS .

    NAME            reduce using rule 45 (edge -> NAME NAME RECEIVE NAME STRONG_FAIRNESS .)
    RIGHT_BRACE     reduce using rule 45 (edge -> NAME NAME RECEIVE NAME STRONG_FAIRNESS .)


state 106

    (44) edge -> NAME NAME SEND NAME STRONG_FAIRNESS .

    NAME            reduce using rule 44 (edge -> NAME NAME SEND NAME STRONG_FAIRNESS .)
    RIGHT_BRACE     reduce using rule 44 (edge -> NAME NAME SEND NAME STRONG_FAIRNESS .)

